import { ConnectButton } from "@rainbow-me/rainbowkit";
import type { NextPage } from "next";
import Head from "next/head";
import Card from "../components/Card";
import { Center, Box, Heading, HStack } from "@chakra-ui/react";
import { Input } from "@chakra-ui/react";
import { Button, ButtonGroup, Link, Text } from "@chakra-ui/react";
import { useState, useEffect } from "react";
import useEnsData from "../hooks/useEns";
import useImgColor from "../hooks/useImgColor";
import { Spinner } from '@chakra-ui/react'
import { isCommunityResourcable } from "@ethersproject/providers";
import { useProvider, useEnsName, useAccount } from "wagmi";
const Home: NextPage = () => {
  const [domainName, setDomainName] = useState("");
  const [finalDomainName, setFinalDomainName] = useState(domainName);
  const ensData = useEnsData(undefined, finalDomainName);
  const { address } = useAccount();
  const imgColor = useImgColor(ensData.avatarUrl || "");
  const [sortedColors, setSortedColors] = useState([]);

  const [isFetching, setIsFetching] = useState(false);

  useEffect(() => {
    setIsFetching(!(ensData.ensName == finalDomainName))
  }, [ensData, finalDomainName])

  const setQuery = () => {
    setFinalDomainName(domainName);
  };

  useEffect(() => {
    setDomainName(ensData.ensName);
    setFinalDomainName(ensData.ensName)
  }, [ensData])

  useEffect(() => {
    setSortedColors(sortColors(imgColor))
  }, [imgColor])


  const convertColor = (clr) => {
    if (clr) {
      return `rgb(${clr._rgb[0]},${clr._rgb[1]},${clr._rgb[2]})`
    } else {
      return false
    }
  }

  const getBrightness = (clr) => {
    if (clr) {
      return clr._rgb[0] * 0.299 + clr._rgb[1] * 0.587 + clr._rgb[2] * 0.114
    } else {
      return false
    }
  }
  const sortColors = (colors) => {
    if (!colors) return []
    let clrs = colors
      .map(clr => ({ clr, brightness: getBrightness(clr) }))
      .sort((a, b) => { return a.brightness - b.brightness })
      .map(({ clr }) => clr)
    return clrs

  }



  return (
    <>
      <Head>
        <title>The Ens Namecard Example</title>
        <meta
          name="description"
          content="Generated by @rainbow-me/create-rainbowkit"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Center w="100%" height="100vh"
        backgroundColor={convertColor(sortedColors[4]) || 'gray.100'} transitionDuration="1s">
        <Box px="5">
          <Heading mb={5}
            color={sortedColors[0] ? convertColor(sortedColors[0]) : 'gray.100'}>
            The ENS Namecard
          </Heading>

          <ConnectButton />
          <Input
            borderColor={sortedColors[0] ? convertColor(sortedColors[0]) : 'gray.100'}

            mt="5"
            value={domainName}
            placeholder="Enter your ens domain name"
            onChange={(e) => setDomainName(e.target.value)}
          ></Input>
          <HStack spacing="5" mt={2}>
            <Text>Example: </Text>
            <Link onClick={() => { setDomainName('cheyuwu.eth'); setFinalDomainName('cheyuwu.eth') }}>cheyuwu.eth</Link>
            <Link onClick={() => { setDomainName('tinaaaaalee.eth'); setFinalDomainName('tinaaaaalee.eth') }}>tinaaaaalee.eth</Link>

          </HStack>
          <Button
            mt="2"
            backgroundColor={sortedColors[0] ? convertColor(sortedColors[0]) : 'gray.100'}
            color="white"
            w="100%"
            onClick={setQuery}
          >
            {" "}
            Fetch
            {isFetching && <Spinner ml={3} size="sm" color="white" />}
          </Button>
          <Box mt="5">
            <HStack mb={4}>
              {imgColor &&
                sortColors(imgColor).map((data, dataId) => (
                  <Box
                    key={dataId}
                    w={50}
                    h={50}
                    shadow="xl"
                    backgroundColor={convertColor(data)}
                  ></Box>
                ))}
            </HStack>
            {/* <pre style={{ width: "500px", whiteSpace: "pre-line" }}>
              {JSON.stringify(imgColor, null, 4)}
            </pre> */}
            {/* <pre style={{ width: "500px", whiteSpace: "pre-line" }}>
              {JSON.stringify(ensData, null, 4)}
            </pre> */}
            {/* <pre>{JSON.stringify(imgColor, null, 4)}</pre> */}
          </Box>
        </Box>

        <Card cardData={ensData} colors={sortedColors} cardBgColor={convertColor(imgColor && imgColor[1])}></Card>
      </Center>
      <Center w="100%" py='3' style={{ position: 'absolute', bottom: 0 }}>
        This Demo is made by <Link px={2} isExternal href='https://www.facebook.com/cheyuwu345'>Che-Yu Wu</Link> and <Link px={2} isExternal href='https://www.facebook.com/lee.ting.ting.tina'>Ting-Ting Lee</Link></Center>
    </>
  );
};

export default Home;
